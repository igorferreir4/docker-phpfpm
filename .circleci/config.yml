version: 2.1

executors:
  docker-docker:
    docker:
      - image: cimg/base:current
    resource_class: small
    
  docker-machine:
    machine:
      image: ubuntu-2204:current
    resource_class: large

commands:
  setup-qemu:
    steps:
      - run:
          name: Setup Qemu
          command: |
            docker run --privileged --rm tonistiigi/binfmt --install all
      - run:
          name: Create builder
          command: |
            docker buildx create --name multi-arch-build --bootstrap --use
      - run:
          name: Login to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin

jobs:
  build-cache-amd64:
    executor: docker-machine
    environment:
      CACHE_REPO: igorferreir4/buildcaches
      CACHE_TAG: php-v8.3.0-amd64
    working_directory: ~/project-files
    steps:
      - checkout:
          path: ~/project-files
      - setup-qemu
      - run:
          name: Build docker image
          command: |
              docker buildx build \
                  --build-arg BUILDKIT_INLINE_CACHE=1 \
                  --cache-from="$CACHE_REPO:$CACHE_TAG" \
                  --tag "$CACHE_REPO:$CACHE_TAG" \
                  --push --platform=linux/amd64 .

  build-cache-arm64:
    executor: docker-machine
    resource_class: arm.large
    environment:
      CACHE_REPO: igorferreir4/buildcaches
      CACHE_TAG: php-v8.3.0-arm64
    working_directory: ~/project-files
    steps:
      - checkout:
          path: ~/project-files
      - setup-qemu
      - run:
          name: Build docker image
          command: |
              docker buildx build \
                  --build-arg BUILDKIT_INLINE_CACHE=1 \
                  --cache-from="$CACHE_REPO:$CACHE_TAG" \
                  --tag "$CACHE_REPO:$CACHE_TAG" \
                  --push --platform=linux/arm64/v8 .

  build-multi-arch:
    executor: docker-machine
    resource_class: large
    environment:
      CACHE_REPO: igorferreir4/buildcaches
      CACHE_AMD64: php-v8.3.0-amd64
      CACHE_ARM64: php-v8.3.0-arm64
      IMAGE_REPO: igorferreir4/php-fpm
      IMAGE_TAGS: latest,v8.3.0
    working_directory: ~/project-files
    steps:
      - checkout:
          path: ~/project-files
      - setup-qemu
      - run:
          name: Build docker image
          command: |
              TAGS=""
              for tag in $(echo $IMAGE_TAGS | tr "," " "); do
                TAGS="$TAGS -t $IMAGE_REPO:$tag"
              done
              docker buildx build \
                  --build-arg BUILDKIT_INLINE_CACHE=1 \
                  --cache-from="$CACHE_REPO:$CACHE_AMD64" \
                  --cache-from="$CACHE_REPO:$CACHE_ARM64" \
                  --push --platform=linux/amd64,linux/arm64/v8 $TAGS .

  deploy:
    executor: docker-docker
    steps:
      # - add_ssh_keys:
      #     fingerprints:
      #       - "SHA256:hLlCCj1OZj3pbBbgrGvfHjdTf20F4IYKyKvyJTMXC/A"
      - run:
          name: Export date of build
          command: |
            echo "$SSH_KEY" | base64 --decode > ~/.ssh/key
            ssh -i ~/.ssh/key $SSH_USER@$SSH_HOST_IGOR_ARM "echo Executado em "$(date -d "-3 hours" +"%d/%m/%G - %Hh:%Mm:%Ss") - php-fpm v8.3.0" >> circleci-data.txt"
      # - run:
      #     name: Deploy to my server
      #     command: |
      #       ssh $SSH_USER@$SSH_HOST_IGOR_ARM "~/50GB/docker/executar-docker-compose-up-d.sh >> ~/circleci.txt 2>&1"

workflows:
  php-v8.3.0:
    jobs:
      - build-cache-amd64:
          context: docker-geral

      - build-cache-arm64:
          context: docker-geral

      - build-multi-arch:
          context: docker-geral
          requires:
            - build-cache-amd64
            - build-cache-arm64

      - deploy:
          context: docker-geral
          requires:
            - build-multi-arch